plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.7'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '7.0.2'
}

group = 'com.orthosocial'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    runtimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

//
// ========== Node Plugin Configuration ==========
//

node {
    version = '24.11.0'          // Node.js version to use
    npmVersion = '10.2.4'        // NPM version to use
    download = true              // Download Node/npm locally (no system install needed)
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

def frontendDir = "${projectDir}/../frontend"

//
// ========== Custom Build Tasks ==========
//

// 1️⃣ Install NPM dependencies
tasks.named('npmInstall') {
    workingDir = file(frontendDir)
}

// 2️⃣ Build the Angular app
tasks.register('ngBuild', com.github.gradle.node.npm.task.NpmTask) {
    dependsOn 'npmInstall'
    workingDir = file(frontendDir)
    args = ['run', 'build', '--', '--configuration', 'production']
    inputs.dir("${frontendDir}/src")
    outputs.dir("${frontendDir}/dist/frontend")
}

// 3️⃣ Copy Angular build output into Spring Boot static folder
tasks.register('copyFrontend', Copy) {
    dependsOn 'ngBuild'
    from("${frontendDir}/dist/frontend/browser")
    into("${projectDir}/src/main/resources/static")
}

// 4️⃣ Ensure frontend is built before backend packaging
tasks.named('processResources') {
    dependsOn 'copyFrontend'
}